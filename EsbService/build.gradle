buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        //classpath 'com.palantir.gradle.docker:gradle-docker:0.28.0'
    }

}
plugins {
    id 'application'
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

}

group 'co.parrolabs'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('springVersion',"5.5.12")
    set('javaxActivationVersion', "1.1.1")
}
dependencies {
    implementation 'co.parrolabs:models_dtos:1.0-SNAPSHOT'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.modelmapper:modelmapper:2.4.4'
    //testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:2.6.4'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.springframework.data:spring-data-commons:2.7.5'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    testImplementation 'org.junit.platform:junit-platform-runner:1.9.2'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.10.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.10.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.4.3'
    implementation 'redis.clients:jedis:3.6.3'
    implementation 'io.lettuce:lettuce-core:6.2.2.RELEASE'
    implementation 'org.apache.commons:commons-pool2:2.9.0'
    //implementation "org.springframework.integration:spring-integration-jdbc:${springVersion}"
    implementation "org.springframework.integration:spring-integration-core:${springVersion}"
    implementation "org.springframework.integration:spring-integration-http:${springVersion}"
    implementation 'org.springframework.integration:spring-integration-kafka:5.5.0'
    implementation "javax.activation:activation:${javaxActivationVersion}"
    implementation 'org.springframework:spring-messaging:5.3.13'
    implementation 'io.vavr:vavr:0.10.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.0.5'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // Use Undertow instead
    implementation 'io.projectreactor:reactor-core:3.3.22.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'
    implementation 'com.amazonaws:aws-java-sdk-lambda:1.11.648'

}

configurations {
    // exclude Reactor Netty
    compile.exclude module: 'org.springframework.boot:spring-boot-starter-reactor-undertow'
    compile.exclude module: 'org.springframework.boot:spring-boot-starter-tomcat'
    //compile.exclude module: "spring-boot-starter-reactor-netty"
}

test {
    useJUnitPlatform()
}